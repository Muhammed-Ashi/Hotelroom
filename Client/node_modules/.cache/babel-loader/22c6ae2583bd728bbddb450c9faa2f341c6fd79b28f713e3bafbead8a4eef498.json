{"ast":null,"code":"export const loggerMiddleware = () => (next, context) => async args => {\n  const {\n    clientName,\n    commandName,\n    inputFilterSensitiveLog,\n    logger,\n    outputFilterSensitiveLog\n  } = context;\n  const response = await next(args);\n  if (!logger) {\n    return response;\n  }\n  if (typeof logger.info === \"function\") {\n    const {\n      $metadata,\n      ...outputWithoutMetadata\n    } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata\n    });\n  }\n  return response;\n};\nexport const loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nexport const getLoggerPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["loggerMiddleware","next","context","args","clientName","commandName","inputFilterSensitiveLog","logger","outputFilterSensitiveLog","response","info","$metadata","outputWithoutMetadata","output","input","metadata","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["/home/user/Mernstack/HotelRoom/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["export const loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAM,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;EACrE,MAAM;IAAEC,UAAU;IAAEC,WAAW;IAAEC,uBAAuB;IAAEC,MAAM;IAAEC;EAAyB,CAAC,GAAGN,OAAO;EACtG,MAAMO,QAAQ,GAAG,MAAMR,IAAI,CAACE,IAAI,CAAC;EACjC,IAAI,CAACI,MAAM,EAAE;IACT,OAAOE,QAAQ;EACnB;EACA,IAAI,OAAOF,MAAM,CAACG,IAAI,KAAK,UAAU,EAAE;IACnC,MAAM;MAAEC,SAAS;MAAE,GAAGC;IAAsB,CAAC,GAAGH,QAAQ,CAACI,MAAM;IAC/DN,MAAM,CAACG,IAAI,CAAC;MACRN,UAAU;MACVC,WAAW;MACXS,KAAK,EAAER,uBAAuB,CAACH,IAAI,CAACW,KAAK,CAAC;MAC1CD,MAAM,EAAEL,wBAAwB,CAACI,qBAAqB,CAAC;MACvDG,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACA,OAAOF,QAAQ;AACnB,CAAC;AACD,OAAO,MAAMO,uBAAuB,GAAG;EACnCC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,eAAe,GAAIC,OAAO,KAAM;EACzCC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAACzB,gBAAgB,EAAE,EAAEgB,uBAAuB,CAAC;EAChE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}