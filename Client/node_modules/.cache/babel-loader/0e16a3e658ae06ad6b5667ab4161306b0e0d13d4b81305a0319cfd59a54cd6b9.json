{"ast":null,"code":"export const ruleSet = {\n  version: \"1.0\",\n  parameters: {\n    Region: {\n      builtIn: \"AWS::Region\",\n      required: false,\n      documentation: \"The AWS region used to dispatch the request.\",\n      type: \"String\"\n    },\n    UseDualStack: {\n      builtIn: \"AWS::UseDualStack\",\n      required: true,\n      default: false,\n      documentation: \"When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.\",\n      type: \"Boolean\"\n    },\n    UseFIPS: {\n      builtIn: \"AWS::UseFIPS\",\n      required: true,\n      default: false,\n      documentation: \"When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.\",\n      type: \"Boolean\"\n    },\n    Endpoint: {\n      builtIn: \"SDK::Endpoint\",\n      required: false,\n      documentation: \"Override the endpoint used to send this request\",\n      type: \"String\"\n    }\n  },\n  rules: [{\n    conditions: [{\n      fn: \"aws.partition\",\n      argv: [{\n        ref: \"Region\"\n      }],\n      assign: \"PartitionResult\"\n    }],\n    type: \"tree\",\n    rules: [{\n      conditions: [{\n        fn: \"isSet\",\n        argv: [{\n          ref: \"Endpoint\"\n        }]\n      }, {\n        fn: \"parseURL\",\n        argv: [{\n          ref: \"Endpoint\"\n        }],\n        assign: \"url\"\n      }],\n      type: \"tree\",\n      rules: [{\n        conditions: [{\n          fn: \"booleanEquals\",\n          argv: [{\n            ref: \"UseFIPS\"\n          }, true]\n        }],\n        error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n        type: \"error\"\n      }, {\n        conditions: [],\n        type: \"tree\",\n        rules: [{\n          conditions: [{\n            fn: \"booleanEquals\",\n            argv: [{\n              ref: \"UseDualStack\"\n            }, true]\n          }],\n          error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n          type: \"error\"\n        }, {\n          conditions: [],\n          endpoint: {\n            url: {\n              ref: \"Endpoint\"\n            },\n            properties: {},\n            headers: {}\n          },\n          type: \"endpoint\"\n        }]\n      }]\n    }, {\n      conditions: [{\n        fn: \"booleanEquals\",\n        argv: [{\n          ref: \"UseFIPS\"\n        }, true]\n      }, {\n        fn: \"booleanEquals\",\n        argv: [{\n          ref: \"UseDualStack\"\n        }, true]\n      }],\n      type: \"tree\",\n      rules: [{\n        conditions: [{\n          fn: \"booleanEquals\",\n          argv: [true, {\n            fn: \"getAttr\",\n            argv: [{\n              ref: \"PartitionResult\"\n            }, \"supportsFIPS\"]\n          }]\n        }, {\n          fn: \"booleanEquals\",\n          argv: [true, {\n            fn: \"getAttr\",\n            argv: [{\n              ref: \"PartitionResult\"\n            }, \"supportsDualStack\"]\n          }]\n        }],\n        type: \"tree\",\n        rules: [{\n          conditions: [],\n          endpoint: {\n            url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: {},\n            headers: {}\n          },\n          type: \"endpoint\"\n        }]\n      }, {\n        conditions: [],\n        error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n        type: \"error\"\n      }]\n    }, {\n      conditions: [{\n        fn: \"booleanEquals\",\n        argv: [{\n          ref: \"UseFIPS\"\n        }, true]\n      }],\n      type: \"tree\",\n      rules: [{\n        conditions: [{\n          fn: \"booleanEquals\",\n          argv: [true, {\n            fn: \"getAttr\",\n            argv: [{\n              ref: \"PartitionResult\"\n            }, \"supportsFIPS\"]\n          }]\n        }],\n        type: \"tree\",\n        rules: [{\n          conditions: [],\n          type: \"tree\",\n          rules: [{\n            conditions: [],\n            endpoint: {\n              url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\",\n              properties: {},\n              headers: {}\n            },\n            type: \"endpoint\"\n          }]\n        }]\n      }, {\n        conditions: [],\n        error: \"FIPS is enabled but this partition does not support FIPS\",\n        type: \"error\"\n      }]\n    }, {\n      conditions: [{\n        fn: \"booleanEquals\",\n        argv: [{\n          ref: \"UseDualStack\"\n        }, true]\n      }],\n      type: \"tree\",\n      rules: [{\n        conditions: [{\n          fn: \"booleanEquals\",\n          argv: [true, {\n            fn: \"getAttr\",\n            argv: [{\n              ref: \"PartitionResult\"\n            }, \"supportsDualStack\"]\n          }]\n        }],\n        type: \"tree\",\n        rules: [{\n          conditions: [],\n          endpoint: {\n            url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: {},\n            headers: {}\n          },\n          type: \"endpoint\"\n        }]\n      }, {\n        conditions: [],\n        error: \"DualStack is enabled but this partition does not support DualStack\",\n        type: \"error\"\n      }]\n    }, {\n      conditions: [],\n      endpoint: {\n        url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\",\n        properties: {},\n        headers: {}\n      },\n      type: \"endpoint\"\n    }]\n  }]\n};","map":{"version":3,"names":["ruleSet","version","parameters","Region","builtIn","required","documentation","type","UseDualStack","default","UseFIPS","Endpoint","rules","conditions","fn","argv","ref","assign","error","endpoint","url","properties","headers"],"sources":["/home/user/Mernstack/HotelRoom/node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js"],"sourcesContent":["export const ruleSet = {\n    version: \"1.0\",\n    parameters: {\n        Region: {\n            builtIn: \"AWS::Region\",\n            required: false,\n            documentation: \"The AWS region used to dispatch the request.\",\n            type: \"String\",\n        },\n        UseDualStack: {\n            builtIn: \"AWS::UseDualStack\",\n            required: true,\n            default: false,\n            documentation: \"When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.\",\n            type: \"Boolean\",\n        },\n        UseFIPS: {\n            builtIn: \"AWS::UseFIPS\",\n            required: true,\n            default: false,\n            documentation: \"When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.\",\n            type: \"Boolean\",\n        },\n        Endpoint: {\n            builtIn: \"SDK::Endpoint\",\n            required: false,\n            documentation: \"Override the endpoint used to send this request\",\n            type: \"String\",\n        },\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    fn: \"aws.partition\",\n                    argv: [\n                        {\n                            ref: \"Region\",\n                        },\n                    ],\n                    assign: \"PartitionResult\",\n                },\n            ],\n            type: \"tree\",\n            rules: [\n                {\n                    conditions: [\n                        {\n                            fn: \"isSet\",\n                            argv: [\n                                {\n                                    ref: \"Endpoint\",\n                                },\n                            ],\n                        },\n                        {\n                            fn: \"parseURL\",\n                            argv: [\n                                {\n                                    ref: \"Endpoint\",\n                                },\n                            ],\n                            assign: \"url\",\n                        },\n                    ],\n                    type: \"tree\",\n                    rules: [\n                        {\n                            conditions: [\n                                {\n                                    fn: \"booleanEquals\",\n                                    argv: [\n                                        {\n                                            ref: \"UseFIPS\",\n                                        },\n                                        true,\n                                    ],\n                                },\n                            ],\n                            error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                            type: \"error\",\n                        },\n                        {\n                            conditions: [],\n                            type: \"tree\",\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            fn: \"booleanEquals\",\n                                            argv: [\n                                                {\n                                                    ref: \"UseDualStack\",\n                                                },\n                                                true,\n                                            ],\n                                        },\n                                    ],\n                                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                                    type: \"error\",\n                                },\n                                {\n                                    conditions: [],\n                                    endpoint: {\n                                        url: {\n                                            ref: \"Endpoint\",\n                                        },\n                                        properties: {},\n                                        headers: {},\n                                    },\n                                    type: \"endpoint\",\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    conditions: [\n                        {\n                            fn: \"booleanEquals\",\n                            argv: [\n                                {\n                                    ref: \"UseFIPS\",\n                                },\n                                true,\n                            ],\n                        },\n                        {\n                            fn: \"booleanEquals\",\n                            argv: [\n                                {\n                                    ref: \"UseDualStack\",\n                                },\n                                true,\n                            ],\n                        },\n                    ],\n                    type: \"tree\",\n                    rules: [\n                        {\n                            conditions: [\n                                {\n                                    fn: \"booleanEquals\",\n                                    argv: [\n                                        true,\n                                        {\n                                            fn: \"getAttr\",\n                                            argv: [\n                                                {\n                                                    ref: \"PartitionResult\",\n                                                },\n                                                \"supportsFIPS\",\n                                            ],\n                                        },\n                                    ],\n                                },\n                                {\n                                    fn: \"booleanEquals\",\n                                    argv: [\n                                        true,\n                                        {\n                                            fn: \"getAttr\",\n                                            argv: [\n                                                {\n                                                    ref: \"PartitionResult\",\n                                                },\n                                                \"supportsDualStack\",\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                            type: \"tree\",\n                            rules: [\n                                {\n                                    conditions: [],\n                                    endpoint: {\n                                        url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                        properties: {},\n                                        headers: {},\n                                    },\n                                    type: \"endpoint\",\n                                },\n                            ],\n                        },\n                        {\n                            conditions: [],\n                            error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                            type: \"error\",\n                        },\n                    ],\n                },\n                {\n                    conditions: [\n                        {\n                            fn: \"booleanEquals\",\n                            argv: [\n                                {\n                                    ref: \"UseFIPS\",\n                                },\n                                true,\n                            ],\n                        },\n                    ],\n                    type: \"tree\",\n                    rules: [\n                        {\n                            conditions: [\n                                {\n                                    fn: \"booleanEquals\",\n                                    argv: [\n                                        true,\n                                        {\n                                            fn: \"getAttr\",\n                                            argv: [\n                                                {\n                                                    ref: \"PartitionResult\",\n                                                },\n                                                \"supportsFIPS\",\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                            type: \"tree\",\n                            rules: [\n                                {\n                                    conditions: [],\n                                    type: \"tree\",\n                                    rules: [\n                                        {\n                                            conditions: [],\n                                            endpoint: {\n                                                url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                properties: {},\n                                                headers: {},\n                                            },\n                                            type: \"endpoint\",\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            conditions: [],\n                            error: \"FIPS is enabled but this partition does not support FIPS\",\n                            type: \"error\",\n                        },\n                    ],\n                },\n                {\n                    conditions: [\n                        {\n                            fn: \"booleanEquals\",\n                            argv: [\n                                {\n                                    ref: \"UseDualStack\",\n                                },\n                                true,\n                            ],\n                        },\n                    ],\n                    type: \"tree\",\n                    rules: [\n                        {\n                            conditions: [\n                                {\n                                    fn: \"booleanEquals\",\n                                    argv: [\n                                        true,\n                                        {\n                                            fn: \"getAttr\",\n                                            argv: [\n                                                {\n                                                    ref: \"PartitionResult\",\n                                                },\n                                                \"supportsDualStack\",\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                            type: \"tree\",\n                            rules: [\n                                {\n                                    conditions: [],\n                                    endpoint: {\n                                        url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                        properties: {},\n                                        headers: {},\n                                    },\n                                    type: \"endpoint\",\n                                },\n                            ],\n                        },\n                        {\n                            conditions: [],\n                            error: \"DualStack is enabled but this partition does not support DualStack\",\n                            type: \"error\",\n                        },\n                    ],\n                },\n                {\n                    conditions: [],\n                    endpoint: {\n                        url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\",\n                        properties: {},\n                        headers: {},\n                    },\n                    type: \"endpoint\",\n                },\n            ],\n        },\n    ],\n};\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE;IACRC,MAAM,EAAE;MACJC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,8CAA8C;MAC7DC,IAAI,EAAE;IACV,CAAC;IACDC,YAAY,EAAE;MACVJ,OAAO,EAAE,mBAAmB;MAC5BC,QAAQ,EAAE,IAAI;MACdI,OAAO,EAAE,KAAK;MACdH,aAAa,EAAE,8IAA8I;MAC7JC,IAAI,EAAE;IACV,CAAC;IACDG,OAAO,EAAE;MACLN,OAAO,EAAE,cAAc;MACvBC,QAAQ,EAAE,IAAI;MACdI,OAAO,EAAE,KAAK;MACdH,aAAa,EAAE,yLAAyL;MACxMC,IAAI,EAAE;IACV,CAAC;IACDI,QAAQ,EAAE;MACNP,OAAO,EAAE,eAAe;MACxBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,iDAAiD;MAChEC,IAAI,EAAE;IACV;EACJ,CAAC;EACDK,KAAK,EAAE,CACH;IACIC,UAAU,EAAE,CACR;MACIC,EAAE,EAAE,eAAe;MACnBC,IAAI,EAAE,CACF;QACIC,GAAG,EAAE;MACT,CAAC,CACJ;MACDC,MAAM,EAAE;IACZ,CAAC,CACJ;IACDV,IAAI,EAAE,MAAM;IACZK,KAAK,EAAE,CACH;MACIC,UAAU,EAAE,CACR;QACIC,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC;MAET,CAAC,EACD;QACIF,EAAE,EAAE,UAAU;QACdC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC,CACJ;QACDC,MAAM,EAAE;MACZ,CAAC,CACJ;MACDV,IAAI,EAAE,MAAM;MACZK,KAAK,EAAE,CACH;QACIC,UAAU,EAAE,CACR;UACIC,EAAE,EAAE,eAAe;UACnBC,IAAI,EAAE,CACF;YACIC,GAAG,EAAE;UACT,CAAC,EACD,IAAI;QAEZ,CAAC,CACJ;QACDE,KAAK,EAAE,mEAAmE;QAC1EX,IAAI,EAAE;MACV,CAAC,EACD;QACIM,UAAU,EAAE,EAAE;QACdN,IAAI,EAAE,MAAM;QACZK,KAAK,EAAE,CACH;UACIC,UAAU,EAAE,CACR;YACIC,EAAE,EAAE,eAAe;YACnBC,IAAI,EAAE,CACF;cACIC,GAAG,EAAE;YACT,CAAC,EACD,IAAI;UAEZ,CAAC,CACJ;UACDE,KAAK,EAAE,wEAAwE;UAC/EX,IAAI,EAAE;QACV,CAAC,EACD;UACIM,UAAU,EAAE,EAAE;UACdM,QAAQ,EAAE;YACNC,GAAG,EAAE;cACDJ,GAAG,EAAE;YACT,CAAC;YACDK,UAAU,EAAE,CAAC,CAAC;YACdC,OAAO,EAAE,CAAC;UACd,CAAC;UACDf,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IAET,CAAC,EACD;MACIM,UAAU,EAAE,CACR;QACIC,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC,EACD,IAAI;MAEZ,CAAC,EACD;QACIF,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC,EACD,IAAI;MAEZ,CAAC,CACJ;MACDT,IAAI,EAAE,MAAM;MACZK,KAAK,EAAE,CACH;QACIC,UAAU,EAAE,CACR;UACIC,EAAE,EAAE,eAAe;UACnBC,IAAI,EAAE,CACF,IAAI,EACJ;YACID,EAAE,EAAE,SAAS;YACbC,IAAI,EAAE,CACF;cACIC,GAAG,EAAE;YACT,CAAC,EACD,cAAc;UAEtB,CAAC;QAET,CAAC,EACD;UACIF,EAAE,EAAE,eAAe;UACnBC,IAAI,EAAE,CACF,IAAI,EACJ;YACID,EAAE,EAAE,SAAS;YACbC,IAAI,EAAE,CACF;cACIC,GAAG,EAAE;YACT,CAAC,EACD,mBAAmB;UAE3B,CAAC;QAET,CAAC,CACJ;QACDT,IAAI,EAAE,MAAM;QACZK,KAAK,EAAE,CACH;UACIC,UAAU,EAAE,EAAE;UACdM,QAAQ,EAAE;YACNC,GAAG,EAAE,6EAA6E;YAClFC,UAAU,EAAE,CAAC,CAAC;YACdC,OAAO,EAAE,CAAC;UACd,CAAC;UACDf,IAAI,EAAE;QACV,CAAC;MAET,CAAC,EACD;QACIM,UAAU,EAAE,EAAE;QACdK,KAAK,EAAE,iFAAiF;QACxFX,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIM,UAAU,EAAE,CACR;QACIC,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC,EACD,IAAI;MAEZ,CAAC,CACJ;MACDT,IAAI,EAAE,MAAM;MACZK,KAAK,EAAE,CACH;QACIC,UAAU,EAAE,CACR;UACIC,EAAE,EAAE,eAAe;UACnBC,IAAI,EAAE,CACF,IAAI,EACJ;YACID,EAAE,EAAE,SAAS;YACbC,IAAI,EAAE,CACF;cACIC,GAAG,EAAE;YACT,CAAC,EACD,cAAc;UAEtB,CAAC;QAET,CAAC,CACJ;QACDT,IAAI,EAAE,MAAM;QACZK,KAAK,EAAE,CACH;UACIC,UAAU,EAAE,EAAE;UACdN,IAAI,EAAE,MAAM;UACZK,KAAK,EAAE,CACH;YACIC,UAAU,EAAE,EAAE;YACdM,QAAQ,EAAE;cACNC,GAAG,EAAE,oEAAoE;cACzEC,UAAU,EAAE,CAAC,CAAC;cACdC,OAAO,EAAE,CAAC;YACd,CAAC;YACDf,IAAI,EAAE;UACV,CAAC;QAET,CAAC;MAET,CAAC,EACD;QACIM,UAAU,EAAE,EAAE;QACdK,KAAK,EAAE,0DAA0D;QACjEX,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIM,UAAU,EAAE,CACR;QACIC,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,CACF;UACIC,GAAG,EAAE;QACT,CAAC,EACD,IAAI;MAEZ,CAAC,CACJ;MACDT,IAAI,EAAE,MAAM;MACZK,KAAK,EAAE,CACH;QACIC,UAAU,EAAE,CACR;UACIC,EAAE,EAAE,eAAe;UACnBC,IAAI,EAAE,CACF,IAAI,EACJ;YACID,EAAE,EAAE,SAAS;YACbC,IAAI,EAAE,CACF;cACIC,GAAG,EAAE;YACT,CAAC,EACD,mBAAmB;UAE3B,CAAC;QAET,CAAC,CACJ;QACDT,IAAI,EAAE,MAAM;QACZK,KAAK,EAAE,CACH;UACIC,UAAU,EAAE,EAAE;UACdM,QAAQ,EAAE;YACNC,GAAG,EAAE,wEAAwE;YAC7EC,UAAU,EAAE,CAAC,CAAC;YACdC,OAAO,EAAE,CAAC;UACd,CAAC;UACDf,IAAI,EAAE;QACV,CAAC;MAET,CAAC,EACD;QACIM,UAAU,EAAE,EAAE;QACdK,KAAK,EAAE,oEAAoE;QAC3EX,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIM,UAAU,EAAE,EAAE;MACdM,QAAQ,EAAE;QACNC,GAAG,EAAE,+DAA+D;QACpEC,UAAU,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE,CAAC;MACd,CAAC;MACDf,IAAI,EAAE;IACV,CAAC;EAET,CAAC;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}